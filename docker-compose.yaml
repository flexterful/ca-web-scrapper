services:

  # Web server
  nginx:
    image: nginx:1.26
    container_name: ws-nginx
    ports:
      - '8080:8080'
    volumes:
      - ./_external/nginx.conf:/etc/nginx/conf.d/default.conf:ro # Specify the config file
      - ./:/www/web-scrapper:ro
    depends_on:
      - php

  # PHP Application
  php:
    build:
      dockerfile: Dockerfile-php
    container_name: ws-php
    expose:
      - 9000
    volumes:
      - ./:/www/web-scrapper
    depends_on:
      db:
        condition: service_started
      redis:
        condition: service_started
      rabbitmq:
        condition: service_started

  # MySQL Database
  db:
    image: mysql:8.4
    container_name: ws-db
    ports:
      - '3336:3336'
    environment:
      MYSQL_TCP_PORT: 3336
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: web-scrap-db
    volumes:
      - ./.docker/mysql/local:/var/lib/mysql # This will store the DB data locally

  # Redis
  redis:
    image: redis:alpine
    container_name: ws-redis
    command: redis-server /usr/local/etc/redis/redis.conf # This will load the config file
    ports:
      - "6379:6379"
    volumes:
      - ./_external/redis.conf:/usr/local/etc/redis/redis.conf:ro # Specify the config file
      - ./.docker/redis/local:/data # This will store the DB data locally

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management
    container_name: ws-rabbitmq
    ports:
      - "5672:5672"     # Port for RabbitMQ connections
      - "15672:15672"   # Port for RabbitMQ Management UI
    environment:
      RABBITMQ_DEFAULT_USER: root
      RABBITMQ_DEFAULT_PASS: root
    volumes:
      - ./.docker/rabbitmq/data:/var/lib/rabbitmq  # Persist RabbitMQ data
